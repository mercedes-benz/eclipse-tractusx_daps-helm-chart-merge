#******************************************************************************
# Copyright (c) 2022, 2023 T-Systems International GmbH
# Copyright (c) 2022, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#*******************************************************************************

# Default values for daps-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- DAPS instances count
replicaCount: 1

image:
  # -- DAPS docker image
  repository: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image tag. Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- Secret which contains dockerconfig.json from private container registry with daps image
imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

omejdn:
  # -- Path to directory with private server key
  serverKeyFolderPath: /opt
  # -- Server key content. DAPS will generate key if it's not provided at startup
  serverKey: ""
  # -- Default user and client will be created if set to `true`. User credentials set in `omejdn.defaultAdminUser` section
  createDefaultAdmin: true
  # -- Default user credentials in format `user:password`
  defaultAdminUser: "admin:admin"


serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # --  Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

  # --  Additional pods annotations
podAnnotations: {}

# -- Pod security context configuration
podSecurityContext: {}
  # fsGroup: 2000

# -- Pod security context configuration
securityContext:
  allowPrivilegeEscalation: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 1000

service:
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 4567
  # -- Service target port
  targetPort: 4567

ingress:
  # -- If set to `true`, DAPS will be exposed with ingress controller at http(s)://(ingress.host)/(ingress.pathPrefix)
  enabled: false
  # -- Additional ingress annotations
  annotations: {}
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"
  # -- Ingress host name
  host: "{{ .Release.Name }}-daps-server"
  # -- Path prefix to be added to DAPS URI. Regex can be used
  pathPrefix: "/"
  # -- Root prefix without regex rules that used to configure daps host name in configuration
  rootPath: "/"
  tls:
    # -- If `true` daps will be exposed with https
    enabled: false

    certMgr:
      # -- If `true` cert-manager will be used to issue a certificate with ingress.host CN name
      enabled: false
      # -- Cert-manager issuer name
      issuer: "letsencrypt-prod"

networkPolicy:
  # -- If `true` network policy will be created to restrict access to DAPS
  enabled: false
  # -- NamespaceSelector configuration for network policy
  namespaceSelector:
    # -- Labels for namespaces to match with network policy
    matchLabels: {}
  # -- PodSelector configuration for network policy
  podSelector:
    # -- Labels for pods to match with network policy
    matchLabels: {}
  # -- Specify a custom from rule network policy
  customFrom: []

persistence:
  # -- If `true` persistent volume will be used to store clients and users configuration
  enabled: true
  # -- Storage class, defaults to none specified.
  storageClass: ""
  # -- Storage accessMode, defaults to ReadWriteOnce.
  accessMode: []
  # -- Volume size
  storageSize: "2Gi"

env:
  # -- Additional env variables
  config: {}
  # -- Additional env variables that should be stored in encrypted way
  secret: {}

# -- Pod resources requests and limits configuration
resources:
  limits:
    cpu: 200m
    memory: 300Mi
  requests:
    cpu: 200m
    memory: 300Mi

# -- DAPS autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  # targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 60

# -- Node selection configuration
nodeSelector: {}

# -- Pod toleration settings
tolerations: []

# -- Pod affinity configuration
affinity: {}

daps:
  secret:
    clientId: ""
    clientSecret: ""
